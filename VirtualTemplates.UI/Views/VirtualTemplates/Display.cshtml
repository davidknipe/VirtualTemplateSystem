@using System.Web.Mvc.Html
@model VirtualTemplates.UI.Models.VirtualTemplateItemModel

@{
    Layout = "_VirtualTemplatesRoot.cshtml";
}

<div class="card-body" id="codeContainer">

    @using (Html.BeginForm())
    {
        <p class="action-buttons">
            @if (!Model.IsVirtual)
            {
                { Html.RenderPartial("Buttons/MakeVirtual"); }
            }
            else
            {
                { Html.RenderPartial("Buttons/Edit"); }
                { Html.RenderPartial("Buttons/Compare"); }
                { Html.RenderPartial("Buttons/Revert"); }
            }
        </p>

        @Html.HiddenFor(m => Model.VirtualPath)
        <div class="card card-body code-wrapper nopadding">
            @{ Html.RenderPartial("Shared/PanelTitle"); }

            <div class="card-body bg-light" id="codepanel">@Html.TextAreaFor(m => Model.TemplateContents)</div>

        </div>
    }

</div>

<script>
    function getModeByFileExtension(path){
        var modelist = ace.require("ace/ext/modelist");
        return modelist.getModeForPath(path).mode;
    }

    var filename = "@Model.VirtualPath";
    var editor = ace.edit("codepanel");
    var mode = getModeByFileExtension(filename);
    ace.require(mode);
    editor.setReadOnly(true);
    editor.setOptions({
        fontSize: "12px",
        highlightActiveLine: false,
        highlightGutterLine: false
    });
    editor.session.setMode(mode);
</script>