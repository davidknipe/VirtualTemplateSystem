@using System.Web.Mvc.Html
@using EPiServer.Shell.Web.Mvc.Html
@model VirtualTemplates.UI.Models.VirtualTemplatesEditModel

@{
    Layout = "_VirtualTemplatesRoot.cshtml";
}

@Html.Raw(EPiServer.Shell.Navigation.MenuHelper.CreateGlobalMenu("/global", "/global/templates/edit"))
<div class="panel-body" id="codeContainer">

    @using (Html.BeginForm())
    {
        <p>
            @if (!Model.IsVirtual)
            {
                @Html.ActionLink(Html.TranslateFallback("/virtualtemplatesystem/buttons/makevirtual", "Make Virtual"), "MakeVirtual", new { VirtualPath = @Model.VirtualPath, ShowAllTemplates = false }, new { @class = "btn btn-sm btn-default" })
            }
            else
            {
                @Html.ActionLink(Html.TranslateFallback("/virtualtemplatesystem/buttons/edit", "Edit"), "Edit", new { VirtualPath = @Model.VirtualPath, ShowAllTemplates = false }, new { @class = "btn btn-sm btn-default" })
            }
            <a href="@Url.Action("Index")" class="btn btn-sm btn-default">Cancel</a>
        </p>

        @Html.HiddenFor(m => Model.VirtualPath)
        <div class="panel panel-default code-wrapper">
            <div class="panel-heading">
                <h3 class="panel-title">@Model.VirtualPath</h3>
            </div>

            @*<div class="panel-body">

                @Html.TextAreaFor(m => Model.TemplateContents, new { @style = "height:100%;width:100%;" })

            </div>*@
            <div class="panel-body" id="codepanel">@Html.TextAreaFor(m => Model.TemplateContents)</div>

        </div>
    }

</div>

<script>
    function getModeByFileExtension(path){
        var modelist = ace.require("ace/ext/modelist");
        return modelist.getModeForPath(path).mode;
    }

    var filename = "@Model.VirtualPath";
    var editor = ace.edit("codepanel");
    var mode = getModeByFileExtension(filename);
    ace.require(mode);
    editor.setReadOnly(true);
    editor.session.setMode(mode);
</script>